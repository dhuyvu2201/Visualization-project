# -*- coding: utf-8 -*-
"""Project_Python.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tmHeErjeR9LWsOZlYKaA2XeUwp2pXlaj
"""

from google.colab import drive
drive.mount('/content/drive')

cd /content/drive/MyDrive/Project_Python

!ls

"""#Pre-processing"""

import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
from scipy import sparse
from sklearn.metrics.pairwise import cosine_similarity,cosine_distances
import altair as alt

df0 = pd.read_csv('data_crawler_0.csv', index_col = 0)
df1 = pd.read_csv('data_crawler_1.csv', index_col = 0)
df2 = pd.read_csv('data_crawler_2.csv', index_col = 0)
df3 = pd.read_csv('data_crawler_3.csv', index_col = 0)
df4 = pd.read_csv('data_crawler_4.csv', index_col = 0)
df5 = pd.read_csv('data_crawler_5.csv', index_col = 0)
df6 = pd.read_csv('data_crawler_6.csv', index_col = 0)
df7 = pd.read_csv('data_crawler_7.csv', index_col = 0)
df8 = pd.read_csv('data_crawler_8.csv', index_col = 0)
df9 = pd.read_csv('data_crawler_9.csv', index_col = 0)
df = pd.concat([df0,df1, df2, df3, df4, df5,df6,df7,df8,df9])

df.head()

df.info()

df = df.dropna()

"""#name"""

df = df.drop_duplicates(subset = 'name')

"""#category

1. Manga
2. Manhua
3. Mean Webtoon - Manhwa 
4. VnComic
5. Comic

#Simple text - Thống kê tổng số chapter mỗi loại truyện (<2000)
"""

s = []
for i in df.chapter_cout:
  emp_str = ""
  for m in i:
      if m.isdigit():
          emp_str = emp_str + m
  s.append(emp_str)
l = []
for i in s:
  if i != "" and int(i) < 2000:
    l.append(int(i))
sum(l)

"""##Scatter plot - Trung bình số lượt xem mỗi thể loại"""

df.view_count = df.view_count.apply(lambda x: int(x.replace(',', '')))

category_df = df.groupby('category').count().reset_index()
category_df = category_df.iloc[:,0:2].rename(columns = {'name' : 'count'})
category_df.head()

temp = category_df.loc[(category_df.category == 'Manga') | (category_df.category == 'Manhua') | (category_df.category == 'Manhwa') | (category_df.category == 'VnComic') | (category_df.category == 'Comic') | (category_df.category == 'Webtoon')]
temp.loc[(temp.category == 'Manhwa')] = [['Hàn Quốc (Manhwa + Webtoon)', 76+186]]
temp = temp.drop(temp[(temp['category'] == 'Manhwa') | (temp['category'] == 'Webtoon')].index)
temp.category[(temp.category == 'Comic')] = [['Mỹ (Comic)']]
temp.category[(temp.category == 'VnComic')] = [['Việt Nam (VnComic)']]
temp.category[(temp.category == 'Manhua')] = [['Trung Quốc (Manhua)']]
temp.category[(temp.category == 'Manga')] = [['Nhật Bản (Manga)']]
temp['percent'] = (temp['count']/temp['count'].sum())*100
temp

temp = temp.sort_values(by = 'percent', ascending = True)

category2_df = category_df.loc[(category_df.category != 'Manga') & (category_df.category != 'Manhua') & (category_df.category != 'Manhwa') & (category_df.category != 'Comic') & (category_df.category != 'VnComic') & (category_df.category != 'Webtoon')]
top_5_category = category2_df.sort_values(by = 'count', ascending = False)
top_5_category.head()

mean_category = df.groupby('category').mean().reset_index()
mean_category['count'] = top_5_category['count']
mean_category

m = mean_category['view_count'].mean()
a = mean_category.loc[round(mean_category['view_count']) > m+300]
b = mean_category.loc[round(mean_category['view_count']) < m+300]
c = mean_category.loc[round(mean_category['view_count'],2) == round(58803.109859,2)]

fig = plt.figure(figsize=(10,8))
ax1 = fig.add_subplot(111)
ax1.scatter(x = a['count'], y = a['view_count'], color = 'orange')
ax1.scatter(x = b['count'], y = b['view_count'], color = 'gray')
ax1.scatter(x = c['count'], y = c['view_count'], color = 'black', s = 200)
plt.title('SỐ LƯỢT XEM TRUNG BÌNH MỖI THỂ LOẠI')
plt.xticks(rotation=30, horizontalalignment="center")
ax1 = plt.axes()
x_axis = ax1.axes.get_xaxis()
ax1.spines['right'].set_visible(False)
ax1.spines['top'].set_visible(False)
plt.ylabel('Số lượt xem trung bình')
plt.xlabel('Tổng số truyện mỗi thể loại')
x = [-50, 2500]
y = [m,m]
plt.plot(x,y, '--', color = 'black')
plt.text(400, mean_category['view_count'].mean()+3000, f'mean')
plt.show()

m = 85000
a = mean_category.loc[(mean_category['view_count'] > 85000)]
b = mean_category.loc[(mean_category['view_count'] < 85000)]

fig = plt.figure(figsize=(10,8))
ax1 = fig.add_subplot(111)
ax1.scatter(x = a['count'], y = a['view_count'], color = 'orange')
ax1.scatter(x = b['count'], y = b['view_count'], color = 'gray')
plt.title('THỂ LOẠI ÍT TRUYỆN NHƯNG NHIỀU LƯỢT XEM NHẤT')
plt.xticks(rotation=30, horizontalalignment="center")
ax1 = plt.axes()
x_axis = ax1.axes.get_xaxis()
ax1.spines['right'].set_visible(False)
ax1.spines['top'].set_visible(False)
plt.ylabel('Số lượt xem trung bình')
plt.xlabel('Tổng số truyện mỗi thể loại')
x = [-50, 2500]
y = [m,m]
plt.plot(x,y, '--', color = 'black')
plt.text(30, 103940, 'Trọng sinh')
plt.text(100, 94500, 'Shounen-ai (Đam mỹ)')
plt.show()

m = 1250
a = mean_category.loc[round(mean_category['count']) > m]
b = mean_category.loc[round(mean_category['count']) < m]

fig = plt.figure(figsize=(10,8))
ax1 = fig.add_subplot(111)
ax1.scatter(x = a['count'], y = a['view_count'], color = 'orange')
ax1.scatter(x = b['count'], y = b['view_count'], color = 'gray')
plt.title('THỂ LOẠI CÓ NHIỀU TRUYỆN NHƯNG ÍT LƯỢT XEM')
plt.xticks(rotation=30, horizontalalignment="center")
ax1 = plt.axes()
x_axis = ax1.axes.get_xaxis()
ax1.spines['right'].set_visible(False)
ax1.spines['top'].set_visible(False)
plt.ylabel('Số lượt xem trung bình')
plt.xlabel('Tổng số truyện mỗi thể loại')
x = [1500, 1500]
y = [30000,130000]
plt.plot(x,y, '--', color = 'black')
plt.text(2000, mean_category['view_count'].mean(), 'Comedy')
plt.text(2400, mean_category['view_count'].mean(), 'Romance')
plt.show()

mean_category.loc[round(mean_category['view_count']) > 85000]

df.categories_list = df.categories_list.apply(lambda x: x.replace('Xuyênkhông', 'XuyênKhông'))
df.categories_list = df.categories_list.apply(lambda x: x.replace('Shoujo-ai', 'ShoujoAi'))
df.categories_list = df.categories_list.apply(lambda x: x.replace(' ', ''))

df.category = df.category.apply(lambda x: x.replace('Xuyênkhông', 'XuyênKhông'))
df.category = df.category.apply(lambda x: x.replace('Shoujo-ai', 'ShoujoAi'))
df.category = df.category.apply(lambda x: x.replace(' ', ''))

df = df.sort_values(by = 'name', ascending = True)

name = df.loc[df.ratting_value == 4].name
name

df.chapter_cout[df.author == 'Hwang Mi Ri']

"""##Bar plot - TỈ LỆ TRUYỆN TRANH THEO QUỐC GIA (%)"""

category_df = df.groupby('category').count().reset_index()
category_df = category_df.iloc[:,0:2].rename(columns = {'name' : 'count'})
category_df.head()

temp = category_df.loc[(category_df.category == 'Manga') | (category_df.category == 'Manhua') | (category_df.category == 'Manhwa') | (category_df.category == 'VnComic') | (category_df.category == 'Comic') | (category_df.category == 'Webtoon')]
temp.loc[(temp.category == 'Manhwa')] = [['Hàn Quốc (Manhwa + Webtoon)', 76+186]]
temp = temp.drop(temp[(temp['category'] == 'Manhwa') | (temp['category'] == 'Webtoon')].index)
temp.category[(temp.category == 'Comic')] = [['Mỹ (Comic)']]
temp.category[(temp.category == 'VnComic')] = [['Việt Nam (VnComic)']]
temp.category[(temp.category == 'Manhua')] = [['Trung Quốc (Manhua)']]
temp.category[(temp.category == 'Manga')] = [['Nhật Bản (Manga)']]
temp['percent'] = (temp['count']/temp['count'].sum())*100
temp

temp = temp.sort_values(by = 'percent', ascending = True)
temp

figure, ax = plt.subplots(1,1, figsize = (10,8))
color = []
for i in temp['percent']:
  if i == max(temp['percent']) or i == min(temp['percent']):
    color.append('black')
  else:
    color.append('slategray')
temp['percent'].plot(kind = 'barh', color = color)
plt.title('TỈ LỆ TRUYỆN TRANH THEO QUỐC GIA (%)')
ax.set_yticklabels(temp.category)
plt.xticks(horizontalalignment="center")
ax.spines['right'].set_visible(False)
ax.spines['top'].set_visible(False)

lst = []
for i in df.chapter_cout:
    emp_str = ""
    for m in i:
        if m.isdigit():
            emp_str = emp_str + m
    lst.append(emp_str)
    
for i in range(len(lst)):
    if (lst[i] == ''):
        lst[i] =1
    else:
        lst[i]=int(lst[i])
        
for i in range(len(lst)):
    if (lst[i] == 0):
        lst[i] =1
    else:
        lst[i]=int(lst[i])

df['Chapter']=lst
df = df[df.Chapter <1100]

data = df[(df.author != 'Đang cập nhật')&
          (df.author != 'Đang Cập Nhật')&
          (df.author != 'Nhiều tác giả')]
data

temp2 = data[data.author == 'Gosho Aoyama']
temp2

temp2 = data[data.author == 'Gosho Aoyama']
temp2

"""#Top 15"""

data

lst = []
for i in df.chapter_cout:
    emp_str = ""
    for m in i:
        if m.isdigit():
            emp_str = emp_str + m
    lst.append(emp_str)
    
for i in range(len(lst)):
    if (lst[i] == ''):
        lst[i] =1
    else:
        lst[i]=int(lst[i])
        
for i in range(len(lst)):
    if (lst[i] == 0):
        lst[i] =1
    else:
        lst[i]=int(lst[i]) 
df['Chapter']=lst
df = df[df.Chapter <1100]
data = df[(df.author != 'Đang cập nhật')&
          (df.author != 'Đang Cập Nhật')&
          (df.author != 'Nhiều tác giả')]

xn=list(set(data.author))
view=list(set(data.author))
for i in range(len(xn)):
    a = data.loc[data.author == xn[i]].ratting_count.sum()
    view[i]=a
    #print(x[i],'=',num[i])
dataf=pd.DataFrame()
dataf['author']=xn
dataf['Sum_view']=view
d1=dataf.groupby('author')['Sum_view'].sum()
d1=d1.sort_values(ascending=False).head(15)
dt1=pd.DataFrame(d1)
dataf = pd.DataFrame(dt1.index)
dataf['Sum_view']=dt1.Sum_view
for i in range(len(d1)):
    dataf.Sum_view[i]=dt1.Sum_view[i]
dataf

alt.Chart(dataf).mark_bar().encode(
    y='author',
    x="Sum_view",
    color=alt.condition(
        alt.datum.Sum_view > 6000000,
        alt.value('cyan'),      
        alt.value('gray')
    )
).properties(width=500)

data3 = data3.sort_values(by = 'view_count', ascending = False)
sns.barplot( y='name',x="view_count", data=data3)
plt.title('Top 5 truyện có số lượt xem nhiều nhất')



temp = data[(data.author == 'Hwang Mi Ri')]

temp.Chapter.sum()

temp2 = data[data.author == 'Gosho Aoyama']
temp2.Chapter.sum()

temp = data[(data.author == 'Hwang Mi Ri')]
temp2 = data[data.author == 'Gosho Aoyama']
figure, ax = plt.subplots(1,1, figsize = (8,8))
sns.histplot(temp.view_count, binwidth = 57000)
sns.histplot(temp2.view_count, color = 'orange', binwidth = 55000)
sns.barplot(x = [0,0], y = [0,0], hue = ['Hwang Mi Ri', 'Gosho Aoyama'])
ax.spines['right'].set_visible(False)
ax.spines['top'].set_visible(False)
ax.set_xlim(left = 0, right = 1700000)
plt.show()

data = df[(df.author != 'Đang cập nhật')&
          (df.author != 'Đang Cập Nhật')&
          (df.author != 'Nhiều tác giả')]

pd.set_option('display.max_rows', None)

alt.data_transformers.disable_max_rows()

selected_region = alt.selection(type="single", encodings=['x'])
alt.Chart(data).mark_rect().encode(
    alt.X('category:N'),
    alt.Y('view_count:Q',bin=True),
    alt.Color('count()',
    scale=alt.Scale(scheme='greenblue'),
    legend=alt.Legend(title='Total Category')
    )
).properties(
 width=600
)